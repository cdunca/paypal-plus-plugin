!function(n){var t={};function e(I){if(t[I])return t[I].exports;var g=t[I]={i:I,l:!1,exports:{}};return n[I].call(g.exports,g,g.exports,e),g.l=!0,g.exports}e.m=n,e.c=t,e.d=function(n,t,I){e.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:I})},e.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.t=function(n,t){if(1&t&&(n=e(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var I=Object.create(null);if(e.r(I),Object.defineProperty(I,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var g in n)e.d(I,g,function(t){return n[t]}.bind(null,g));return I},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,"a",t),t},e.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},e.p="",e(e.s=1)}([,function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./resources/js/plusFrameView.js\nconst FRAME_SELECTOR = 'ppplus';\n\n/**\n * Retrieve the configuration from the json string attached to an element\n * @param frameElement\n * @returns {*}\n */\nfunction appConfigurationFromElement(frameElement)\n{\n    if (!frameElement) {\n        return null;\n    }\n\n    try {\n        return JSON.parse(frameElement.dataset.config);\n    } catch (e) {\n        return null;\n    }\n}\n\n/**\n * Setup the PayPal Application\n * @returns {*}\n */\nfunction bootstrapPayPalApp()\n{\n    const frameElement = document.querySelector(`#${FRAME_SELECTOR}`);\n    const appConfiguration = appConfigurationFromElement(frameElement);\n\n    if (typeof PAYPAL === 'undefined') {\n        return;\n    }\n    if (!frameElement || !appConfiguration) {\n        return;\n    }\n\n    return PAYPAL.apps.PPP(appConfiguration);\n}\n\n// CONCATENATED MODULE: ./resources/js/expressCheckout/Request.js\n/**\n * Class Request\n *\n * @type {Request}\n */\nconst Request = class Request\n{\n    // TODO Make the fields private if possible.\n    constructor(ajaxUrl, action)\n    {\n        this.ajaxUrl = ajaxUrl;\n        this.action = action;\n    }\n\n    formDataObject(formData)\n    {\n        const formDataEntries = [...formData.entries(), ['action', this.action]];\n        const dataObject = formDataEntries.reduce((obj, [key, value]) => {\n            obj[key] = value;\n            return obj;\n        }, {});\n\n        return dataObject;\n    }\n\n    submit(formData)\n    {\n        const dataObject = this.formDataObject(formData);\n\n        if (_.isEmpty(dataObject)) {\n            return Promise.reject('No formData to send to the server.');\n        }\n\n        return new Promise((resolve, reject) => {\n            jQuery.ajax({\n                url: this.ajaxUrl,\n                method: 'POST',\n                data: dataObject,\n                error: reject,\n                success: resolve,\n            });\n        });\n    }\n};\n\n/**\n * Request Factory\n *\n * @param ajaxUrl\n * @param action\n * @returns {Request}\n */\nfunction RequestFactory(ajaxUrl, action)\n{\n    if (!ajaxUrl || !action) {\n        throw new Error('Invalid parameters when construct Request instance');\n    }\n\n    let object = new Request(ajaxUrl, action);\n    Object.freeze(object);\n\n    return object;\n}\n\n// CONCATENATED MODULE: ./resources/js/expressCheckout/context.js\n/**\n * Retrieve Context by Element\n *\n * @param element\n * @returns {string}\n */\nfunction contextByElement(element)\n{\n    return ('context' in element.dataset ? element.dataset.context : '');\n}\n\n// CONCATENATED MODULE: ./resources/js/expressCheckout/form.js\n\n\nconst CART_BUTTON_SELECTOR = 'woo-paypalplus-checkout-nonce';\n\n/**\n * Create a FormData object by the closest form of the given element\n *\n * @param element\n * @returns {FormData}\n */\nfunction formDataByElement(element)\n{\n    const form = element.closest('form');\n\n    if (!form) {\n        throw new Error(\n            'Unable to retrieve form. Form element does not exists or is not a parent of the given element.'\n        );\n    }\n\n    const formData = new FormData(form);\n    formData.append('context', contextByElement(element));\n\n    return formData;\n}\n\n/**\n * Create a FormData for the Cart\n * WooCommerce mini cart doesn't have any form associated with it\n *\n * @param element\n * @returns {FormData}\n */\nfunction formDataForCart(element)\n{\n    try {\n        const [nonceName, nonceValue] = retrieveNonceForCart(element);\n        const formData = new FormData();\n\n        formData.append('context', contextByElement(element));\n        formData.append(nonceName, nonceValue);\n\n        return formData;\n    } catch (err) {\n        return new FormData();\n    }\n}\n\nfunction retrieveNonceForCart(element)\n{\n    const nonceElement = element.parentNode.querySelector(`.${CART_BUTTON_SELECTOR}`);\n\n    if (!nonceElement) {\n        throw new Error('Cannot build the form data, missing security nonce.');\n    }\n\n    const nonceName = ('noncename' in nonceElement.dataset) ? nonceElement.dataset.noncename : '';\n    const nonceValue = ('noncevalue' in nonceElement.dataset) ? nonceElement.dataset.noncevalue : '';\n\n    if (!nonceName || !nonceValue) {\n        throw new Error('Cannot build the form data, missing security nonce.');\n    }\n\n    return [\n        nonceName,\n        nonceValue\n    ];\n}\n\n// CONCATENATED MODULE: ./resources/js/expressCheckout/smartPaymentButton.js\n\n\n\nconst SINGLE_PRODUCT_BUTTON = 'paypalplus_ecs_single_product_button';\nconst CART_BUTTON = 'paypalplus_ecs_cart_button';\n\n/**\n * Class Smart Payment Button Renderer\n *\n * @type {SmartPaymentButtonRenderer}\n */\nconst smartPaymentButton_SmartPaymentButtonRenderer = class SmartPaymentButtonRenderer\n{\n    /**\n     * Constructor\n     *\n     * @param validContexts\n     * @param request\n     */\n    constructor(validContexts, request)\n    {\n        this.validContexts = Array.from(validContexts);\n        this.request = request;\n    }\n\n    /**\n     * Render button for single product\n     */\n    singleProductButtonRender()\n    {\n        const element = document.querySelector(`#${SINGLE_PRODUCT_BUTTON}`);\n        element && this.render(element);\n    }\n\n    /**\n     * Render Button for Cart\n     */\n    cartButtonRender()\n    {\n        const element = document.querySelector(`#${CART_BUTTON}`);\n        element && this.render(element);\n    }\n\n    /**\n     * Render Button for the Given Element\n     *\n     * @param element\n     * @returns {*}\n     */\n    // TODO Make it private\n    render(element)\n    {\n        if (_.isUndefined(paypal)) {\n            return;\n        }\n\n        return paypal.Buttons({\n            style: {\n                layout: 'vertical',\n            },\n            createOrder: (data, actions) => {\n                const formData = this.formDataByContext(element);\n\n                this.request\n                    .submit(formData)\n                    .then(() => {\n                        return 12; // TODO Implement correct value instead of dummy data\n                    });\n            }\n        }).render(element);\n    }\n\n    /**\n     * Retrieve context for FormData instance by the Given Element\n     *\n     * @param element\n     * @returns {FormData}\n     */\n    // TODO Make it private\n    formDataByContext(element)\n    {\n        let formData = new FormData();\n        const context = contextByElement(element);\n\n        if (!this.validContexts.includes(context)) {\n            throw new Error(\n                'Invalid context when try to retrieve the form data during express checkout request.'\n            );\n        }\n\n        try {\n            switch (context) {\n                case 'cart':\n                    formData = formDataForCart(element);\n                    break;\n                case 'product':\n                    formData = formDataByElement(element);\n                    break;\n            }\n        } catch (err) {\n        }\n\n        return formData;\n    }\n};\n\n/**\n * Smart Payment Button Renderer Factory\n *\n * @param validContexts\n * @param request\n * @returns {SmartPaymentButtonRenderer}\n * @constructor\n */\nfunction SmartPaymentButtonRendererFactory(validContexts, request)\n{\n    const object = new smartPaymentButton_SmartPaymentButtonRenderer(validContexts, request);\n\n    Object.freeze(object);\n\n    return object;\n}\n\n// CONCATENATED MODULE: ./resources/js/front.js\n\n\n\n\n(function (jQuery, _, expressCheckoutData) {\n    /**\n     * Ensure the Global Express Checkout is a Valid Value\n     * @returns {boolean}\n     */\n    function isValidExpressCheckoutData()\n    {\n        return !_.isUndefined(expressCheckoutData) && !_.isEmpty(expressCheckoutData);\n    }\n\n    /**\n     * Bootstrap Express checkout\n     * @returns void\n     */\n    function bootstrapExpressCheckout()\n    {\n        if (!isValidExpressCheckoutData()) {\n            return;\n        }\n\n        const requestData = expressCheckoutData.request;\n        if (!_.isObject(requestData)) {\n            return;\n        }\n\n        const validContexts = expressCheckoutData.validContexts;\n        if (!_.isArray(validContexts)) {\n            return;\n        }\n\n        const request = RequestFactory(requestData.ajaxUrl, requestData.action);\n        const smartPaymentButton = SmartPaymentButtonRendererFactory(\n            validContexts,\n            request\n        );\n\n        smartPaymentButton.singleProductButtonRender();\n        smartPaymentButton.cartButtonRender();\n        jQuery(document.body).on('wc_fragments_refreshed added_to_cart', () => {\n            smartPaymentButton.cartButtonRender();\n        });\n    }\n\n    window.addEventListener('load', () => {\n        bootstrapExpressCheckout();\n        // Isn't possible to listen on a jQuery event by using `addEventListener`\n        jQuery(document.body).on('updated_checkout', () => {\n            bootstrapPayPalApp();\n        });\n    });\n\n})(jQuery, _, window.wooPayPalPlusExpressCheckout);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n")}]);
//# sourceMappingURL=front.min.js.map