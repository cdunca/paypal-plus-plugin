!function(I){var n={};function g(C){if(n[C])return n[C].exports;var t=n[C]={i:C,l:!1,exports:{}};return I[C].call(t.exports,t,t.exports,g),t.l=!0,t.exports}g.m=I,g.c=n,g.d=function(I,n,C){g.o(I,n)||Object.defineProperty(I,n,{enumerable:!0,get:C})},g.r=function(I){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},g.t=function(I,n){if(1&n&&(I=g(I)),8&n)return I;if(4&n&&"object"==typeof I&&I&&I.__esModule)return I;var C=Object.create(null);if(g.r(C),Object.defineProperty(C,"default",{enumerable:!0,value:I}),2&n&&"string"!=typeof I)for(var t in I)g.d(C,t,function(n){return I[n]}.bind(null,t));return C},g.n=function(I){var n=I&&I.__esModule?function(){return I.default}:function(){return I};return g.d(n,"a",n),n},g.o=function(I,n){return Object.prototype.hasOwnProperty.call(I,n)},g.p="",g(g.s=1)}([,function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./resources/js/expressCheckout/Request.js\n/**\n * Class Request\n *\n * @type {Request}\n */\nconst Request = class Request\n{\n    // TODO Make the fields private if possible.\n    constructor(ajaxUrl, action)\n    {\n        this.ajaxUrl = ajaxUrl;\n        this.action = action;\n    }\n\n    formDataObject(formData)\n    {\n        const formDataEntries = [...formData.entries(), ['action', this.action]];\n        const dataObject = formDataEntries.reduce((obj, [key, value]) => {\n            obj[key] = value;\n            return obj;\n        }, {});\n\n        return dataObject;\n    }\n\n    submit(formData)\n    {\n        // TODO Extract specific data such as: action, nonce, task, context and\n        //      put the rest within a specific object.\n        //      Make a separation for data controls and real request data.\n\n        const dataObject = this.formDataObject(formData);\n\n        if (_.isEmpty(dataObject)) {\n            return Promise.reject('No formData to send to the server.');\n        }\n\n        return new Promise((resolve, reject) => {\n            jQuery.ajax({\n                url: this.ajaxUrl,\n                method: 'POST',\n                data: dataObject,\n                error: reject,\n                success: resolve\n            });\n        });\n    }\n};\n\n/**\n * Request Factory\n *\n * @param ajaxUrl\n * @param action\n * @returns {Request}\n */\nfunction RequestFactory(ajaxUrl, action)\n{\n    if (!ajaxUrl || !action) {\n        throw new Error('Invalid parameters when construct Request instance');\n    }\n\n    let object = new Request(ajaxUrl, action);\n    Object.freeze(object);\n\n    return object;\n}\n\n// CONCATENATED MODULE: ./resources/js/expressCheckout/context.js\n/**\n * Retrieve Context by Element\n *\n * @param element\n * @returns {string}\n */\nfunction contextByElement(element)\n{\n    return ('context' in element.dataset ? element.dataset.context : '');\n}\n\n// CONCATENATED MODULE: ./resources/js/expressCheckout/form.js\n\n\nconst CART_BUTTON_SELECTOR = 'woo-paypalplus-checkout-nonce';\n\n/**\n * Create a FormData object by the closest form of the given element\n *\n * @param element\n * @returns {FormData}\n */\nfunction formDataByElement(element)\n{\n    const form = element.closest('form');\n\n    if (!form) {\n        throw new Error(\n            'Unable to retrieve form. Form element does not exists or is not a parent of the given element.'\n        );\n    }\n\n    const formData = new FormData(form);\n    formData.append('context', contextByElement(element));\n\n    return formData;\n}\n\n/**\n * Create a FormData for the Cart\n * WooCommerce mini cart doesn't have any form associated with it\n *\n * @param element\n * @returns {FormData}\n */\nfunction formDataForCart(element)\n{\n    try {\n        const [nonceName, nonceValue] = retrieveNonceForCart(element);\n        const formData = new FormData();\n\n        formData.append('context', contextByElement(element));\n        formData.append(nonceName, nonceValue);\n\n        return formData;\n    } catch (err) {\n        return new FormData();\n    }\n}\n\nfunction retrieveNonceForCart(element)\n{\n    const nonceElement = element.parentNode.querySelector(`.${CART_BUTTON_SELECTOR}`);\n\n    if (!nonceElement) {\n        throw new Error('Cannot build the form data, missing security nonce.');\n    }\n\n    const nonceName = ('noncename' in nonceElement.dataset) ? nonceElement.dataset.noncename : '';\n    const nonceValue = ('noncevalue' in nonceElement.dataset) ? nonceElement.dataset.noncevalue : '';\n\n    if (!nonceName || !nonceValue) {\n        throw new Error('Cannot build the form data, missing security nonce.');\n    }\n\n    return [\n        nonceName,\n        nonceValue\n    ];\n}\n\n// CONCATENATED MODULE: ./resources/js/expressCheckout/smartPaymentButton.js\n\n\n\nconst SINGLE_PRODUCT_BUTTON = 'paypalplus_ecs_single_product_button';\nconst CART_BUTTON = 'paypalplus_ecs_cart_button';\n\nconst TASK_CREATE_ORDER = 'createOrder';\nconst TASK_STORE_PAYMENT_DATA = 'storePaymentData';\n\n/**\n * Class Smart Payment Button Renderer\n *\n * @type {SmartPaymentButtonRenderer}\n */\nconst smartPaymentButton_SmartPaymentButtonRenderer = class SmartPaymentButtonRenderer\n{\n    /**\n     * Constructor\n     *\n     * @param buttonConfiguration\n     * @param validContexts\n     * @param request\n     */\n    constructor(buttonConfiguration, validContexts, request)\n    {\n        this.buttonConfiguration = buttonConfiguration;\n        this.validContexts = Array.from(validContexts);\n        this.request = request;\n    }\n\n    /**\n     * Render button for single product\n     */\n    singleProductButtonRender()\n    {\n        const element = document.querySelector(`#${SINGLE_PRODUCT_BUTTON}`);\n        element && this.render(element);\n    }\n\n    /**\n     * Render Button for Cart\n     */\n    cartButtonRender()\n    {\n        const element = document.querySelector(`#${CART_BUTTON}`);\n        element && this.render(element);\n    }\n\n    /**\n     * Render Button for the Given Element\n     *\n     * @param element\n     * @returns {*}\n     */\n    // TODO Make it private\n    render(element)\n    {\n        if (_.isUndefined(paypal)) {\n            return;\n        }\n\n        paypal.Button.render({\n            ...this.buttonConfiguration,\n\n            /**\n             * Do Payment\n             *\n             * @returns {*}\n             */\n            payment: () => {\n                const formData = this.formDataByElement(element);\n                formData.append('task', TASK_CREATE_ORDER);\n\n                return this.request\n                    .submit(formData)\n                    .then(response => {\n                        if (!('data' in response)) {\n                            // TODO Do something to inform user about the problem and close the flow.\n                        }\n\n                        const orderId = 'orderID' in response.data ? response.data.orderID : '';\n                        if (!orderId) {\n                            // TODO Do something to inform user about the problem and close the flow.\n                        }\n\n                        return orderId;\n                    });\n            },\n\n            /**\n             * Execute Authorization\n             *\n             * @param data\n             * @param actions\n             * @returns {*}\n             */\n            onAuthorize: (data, actions) => {\n                // TODO Ensure return_url exists.\n                const formData = this.formDataByElement(element);\n\n                formData.append('task', TASK_STORE_PAYMENT_DATA);\n                formData.append('orderID', data.orderID);\n                formData.append('payerID', data.payerID);\n                formData.append('paymentID', data.paymentID);\n                formData.append('paymentToken', data.paymentToken);\n\n                return this.request\n                    .submit(formData)\n                    .then((response) => {\n                        if (response.success) {\n                            const returnUrl = 'returnUrl' in data ? data.returnUrl : '';\n                            returnUrl && actions.redirect(null, returnUrl);\n                        }\n\n                        // TODO Show alert to the user\n                    });\n            },\n\n            /**\n             * Perform Action when a Payment get Cancelled\n             *\n             * @param data\n             * @param actions\n             */\n            onCancel: (data, actions) => {\n                actions.close();\n                const cancelUrl = 'cancelUrl' in data ? data.cancelUrl : '';\n                cancelUrl && actions.redirect(null, cancelUrl);\n            },\n\n            onError: (data, actions) => {\n                console.log('ON ERROR', data, actions);\n                // TODO Redirect to cart and show customizable notice with message.\n            }\n\n        }, element);\n    }\n\n    /**\n     * Retrieve context for FormData instance by the Given Element\n     *\n     * @param element\n     * @returns {FormData}\n     */\n    // TODO Make it private if not possible move it as closure within the render function.\n    formDataByElement(element)\n    {\n        let formData = new FormData();\n        const context = contextByElement(element);\n\n        if (!this.validContexts.includes(context)) {\n            throw new Error(\n                'Invalid context when try to retrieve the form data during express checkout request.'\n            );\n        }\n\n        try {\n            switch (context) {\n                case 'cart':\n                    formData = formDataForCart(element);\n                    break;\n                case 'product':\n                    formData = formDataByElement(element);\n                    break;\n            }\n        } catch (err) {\n        }\n\n        return formData;\n    }\n};\n\n/**\n * Smart Payment Button Renderer Factory\n *\n * @param buttonConfiguration\n * @param validContexts\n * @param request\n * @returns {SmartPaymentButtonRenderer}\n * @constructor\n */\nfunction SmartPaymentButtonRendererFactory(buttonConfiguration, validContexts, request)\n{\n    const object = new smartPaymentButton_SmartPaymentButtonRenderer(buttonConfiguration, validContexts, request);\n\n    Object.freeze(object);\n\n    return object;\n}\n\n// CONCATENATED MODULE: ./resources/js/expressCheckout.js\n\n\n\n\n(function (jQuery, _, expressCheckoutData) {\n    /**\n     * Ensure the Global Express Checkout is a Valid Value\n     * @returns {boolean}\n     */\n    function isValidExpressCheckoutData()\n    {\n        return !_.isUndefined(expressCheckoutData) && !_.isEmpty(expressCheckoutData);\n    }\n\n    /**\n     * Bootstrap Express checkout\n     * @returns void\n     */\n    function bootstrapExpressCheckout()\n    {\n        if (!isValidExpressCheckoutData()) {\n            return;\n        }\n\n        const requestData = expressCheckoutData.request;\n        if (!_.isObject(requestData)) {\n            return;\n        }\n\n        const validContexts = expressCheckoutData.validContexts;\n        if (!_.isArray(validContexts)) {\n            return;\n        }\n\n        const request = RequestFactory(requestData.ajaxUrl, requestData.action);\n        const smartPaymentButton = SmartPaymentButtonRendererFactory(\n            expressCheckoutData,\n            validContexts,\n            request\n        );\n\n        smartPaymentButton.singleProductButtonRender();\n        smartPaymentButton.cartButtonRender();\n        jQuery(document.body).on('wc_fragments_refreshed removed_from_cart added_to_cart', () => {\n            smartPaymentButton.cartButtonRender();\n        });\n    }\n\n    window.addEventListener('load', () => {\n        bootstrapExpressCheckout();\n    });\n})(jQuery, window._, window.wooPayPalPlusExpressCheckout);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n")}]);
//# sourceMappingURL=expressCheckout.min.js.map